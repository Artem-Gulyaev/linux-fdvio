# To make the build reproducible, we fix the kernel headers
# version, but leave opportunity to update it.
KVER_DOCKER ?= v5.4

KVER_LOCAL?= $(shell uname -r)
KDIR_LOCAL ?= /lib/modules/$(KVER_LOCAL)/build

# NOTE: don't change this unless you're sure what you're doing
#	cause by this tag the dependent components refer to the current
#	component
DOCKER_OUT_IMAGE_TAG = fdvio
DOCKER_OUT_TEST_IMAGE_TAG = fdvio-test

.PHONY: test docker-image

# Creates the Fdvio test Build
default:
	$(MAKE) -C ${KDIR_LOCAL} M=$$PWD \
		CONFIG_BOSCH_DRIVERS=y \
		CONFIG_BOSCH_FDVIO_DRIVER=m \
		CONFIG_BOSCH_FDVIO_DRIVER_VERSION=$(git rev-parse HEAD) \
		CONFIG_BOSCH_FD_TEST_TRANSPORT=m

# Cleans Fdvio
clean:
	$(MAKE) -C ${KDIR_LOCAL} M=$$PWD clean

# Install to current machine
install:
	$(MAKE) -C $(KDIR_LOCAL) M=$$PWD modules_install

# Try to remove the installed driver from current machine
uninstall:
	rm -f /lib/modules/${KVER_LOCAL}/extra/src/fdvio.ko

# Build Docker deployed image (Docker image with built and installed Fdvio
# driver)

# This will build the reusable Docker Stage for
# other components to build the external kernel modules
docker-image:
	cd $$PWD && docker build 									\
					--progress=plain							\
					--build-arg kernel_version=${KVER_DOCKER}	\
					--tag ${DOCKER_OUT_IMAGE_TAG}				\
					--target ${DOCKER_OUT_IMAGE_TAG}			\
					.											\
		&& echo "docker-image: \033[0;32mOK\033[0m"

# test if the image is really working
test: docker-image
	cd $$PWD && docker build 									\
					--build-arg kernel_version=${KVER_DOCKER}	\
					--tag ${DOCKER_OUT_TEST_IMAGE_TAG}			\
					--tag ${DOCKER_OUT_TEST_IMAGE_TAG}			\
					--progress=plain							\
					.											\
		&& echo "test: \033[0;32mOK\033[0m"

# Will remove the docker image generated by the build
# and all dangling images as well
clean-docker-images:
	docker rmi ${DOCKER_OUT_IMAGE_TAG} --force
	docker rmi ${DOCKER_OUT_TEST_IMAGE_TAG} --force
	docker image prune --force
	docker system prune --force

print-output-docker-image-tag:
	@echo "${DOCKER_OUT_IMAGE_TAG}"
